name: 'build-packer'

on:
  push:

permissions:
  id-token: write
  contents: read

jobs:
  check-if-ami-exists:
    name: 'check-if-ami-exists'
    runs-on: ubuntu-latest

    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: "${{ secrets.AWS_MANAGEMENT_ROLE }}"
          aws-region: us-east-1

      - name: Get ami name
        run: echo "AMI_NAME=$(cat versions.pkrvars.hcl | awk -F'\"' '{print $2}')" >> $GITHUB_ENV

      - name: Check if ami already exists
        run: |
          if $(aws ec2 describe-images --filters "Name=name,Values=${{ env.AMI_NAME }}" | grep -q "Name")
          then
            echo "AMI_EXISTS=true" >> $GITHUB_ENV
          else
            echo "AMI_EXISTS=false" >> $GITHUB_ENV
          fi

    build-packer:
      if: "${{ env.AMI_EXISTS }}" == false
      name: 'build-packer'
      runs-on: ubuntu-latest

      defaults:
        run:
          shell: bash
          working-directory: packer

      steps:
        - name: Git clone the repository
          uses: actions/checkout@v3

        - name: Configure aws credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            role-to-assume: "${{ secrets.AWS_MANAGEMENT_ROLE }}"
            aws-region: us-east-1

        - name: Packer Format
          run: packer fmt . -check
          if: $AMI_EXISTS == false

        - name: Packer Init
          run: packer init .
          if: $AMI_EXISTS == false

        - name: Packer Validate
          run: packer validate --var-file=versions.pkrvars.hcl .
          if: $AMI_EXISTS == false

        - name: Packer Build
          run: packer build --var-file=versions.pkrvars.hcl .
          if: $AMI_EXISTS == false
