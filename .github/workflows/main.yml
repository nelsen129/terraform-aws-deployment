name: 'Terraform'

on:
  push:
    branches:
      main
  pull_request:

permissions:
  contents: read

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  staging-deploy:
    if: github.event_name == 'pull_request'
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform -chdir=stage init

    - name: Terraform Format
      run: terraform -chdir=stage fmt -check

    - name: Terraform Plan
      run: terraform -chdir=stage plan -input=false

    - name: Terraform Apply
      run: terraform -chdir=stage apply -auto-approve -input=false

  production-deploy:
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform -chdir=prod init

    - name: Terraform Format
      run: terraform -chdir=prod fmt -check

    - name: Terraform Plan
      run: terraform -chdir=prod plan -input=false

    - name: Terraform Apply
      run: terraform -chdir=prod apply -auto-approve -input=false
