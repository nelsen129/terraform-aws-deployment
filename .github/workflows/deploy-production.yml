name: 'deploy-production'

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  production-deploy-base:
    name: 'deploy-production-base'
    runs-on: ubuntu-latest 
    environment: production 

    defaults: 
      run: 
        shell: bash 
        working-directory: terraform/components/base 

    steps: 
      - name: Git clone the rpository 
        uses: actions/checkout@v3 

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: "${{ secrets.AWS_MANAGEMENT_ROLE }}"
          aws-region: us-east-1

      - name: Setup Terraform variables
        run: |-
          cat <<EOT >> terraform.tfvars

          account_emails = ["${{ secrets.AWS_ACCOUNT_EMAILS }}"]

          account_names = ["${{ secrets.AWS_ACCOUNT_NAMES }}"]
          EOT

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -input=false

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false


  production-deploy:
    name: 'deploy-production'
    runs-on: ubuntu-latest
    environment: production
    needs: production-deploy-base

    defaults:
      run:
        shell: bash
        working-directory: terraform/prod

    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: "${{ secrets.AWS_MANAGEMENT_ROLE }}"
          aws-region: us-east-1

      - name: Setup Terraform variables
        run: |-
          cat <<EOT >> terraform.tfvars

          role_arn = "${{ secrets.AWS_GITHUB_ACTIONS_ROLE }}"
          EOT

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -input=false

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false
